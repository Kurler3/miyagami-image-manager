// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id         String   @id @default(uuid())
  title      String
  description String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  imageUrl   String? // No image url in case that the image is private, in which case we just create a signed url on the fly.
  imagePath  String // Path to the image in storage.
  public     Boolean  @default(false)
  userId     String

  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Favorite   Favorite[]

  @@map("images")
}

model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String
  imageId   String

  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)

   @@map("favorites")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  favorites Favorite[]
  images    Image[]

   @@map("users")
}